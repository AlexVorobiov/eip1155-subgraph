type Account @entity {
	id:                           ID!
	balances:                     [Balance!]! @derivedFrom(field: "account")
	transfersOperator:            [Transfer!]! @derivedFrom(field: "operator")
	transfersFrom:                [Transfer!]! @derivedFrom(field: "from")
	transfersTo:                  [Transfer!]! @derivedFrom(field: "to")
	approvalsOwner:               [Approval!]! @derivedFrom(field: "owner")
	approvalsSpender:             [Approval!]! @derivedFrom(field: "spender")
}

type TokenRegistry @entity {
	id:                           ID!
	tokens:                       [Token!]! @derivedFrom(field: "registry")
}

type Token @entity {
	id:                           ID!
	registry:                     TokenRegistry!
	identifier:                   BigInt!
	URI:                          String
	totalSupply:                  BigInt!
	balances:                     [Balance!]! @derivedFrom(field: "token")
	transfers:                    [Transfer!]! @derivedFrom(field: "token")
	approvals:                    [Transfer!]! @derivedFrom(field: "token")
}

type Balance @entity {
	id:                           ID!
	token:                        Token!
	account:                      Account!
	value:                        BigInt!
	transfersFrom:                [Transfer!]! @derivedFrom(field: "fromBalance")
	transfersTo:                  [Transfer!]! @derivedFrom(field: "toBalance")
}

type Transfer implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	operator:                     Account!
	from:                         Account!
	fromBalance:                  Balance
	to:                           Account!
	toBalance:                    Balance
	value:                        BigInt!
}

type Approval implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	owner:                        Account!
	spender:                      Account!
	value:                        BigInt!
}

type Sell @entity {
	id:                           ID!
	contract:                     String!
	blockNumber:                  BigInt!
	buyHash:                      String!
	sellHash:                     String!
	maker:                        Account!
	taker:                        Account!
	price:                        BigInt!
	metadata:                     String!
	transaction:                  Transaction!
}

type OwnershipTransferred @entity {
	id:                           ID!
	blockNumber:                  BigInt!
	token:                        Token!
    previousOwner:                Account!
    newOwner:                     Account!
    transaction:                  Transaction!
}

type ContractInfo @entity {
	id:                                     ID!
	latestSaleBlockNumber:                  BigInt!
}

type ContractBlockInfo @entity {
	id:                                     ID!
	latestBlockNumber:                      BigInt!
}

type CreatedCollection @entity {
	id:                           ID!
	contract:                     String!
	blockNumber:                  BigInt!
	creator:                      Account!
	collectionAddress:            String!
	transaction:                  Transaction!
	name:                         String!
	uri:                          String!
}


type CreatedToken @entity {
	id:                           ID!
	blockNumber:                  BigInt!
	identifier:                   BigInt!
	creator:                      Account!
	uri:                          String!
	contract:                     String!
	value:                        BigInt!
}

type LaunchpadSale @entity {
    id:                           ID!
	blockNumber:                  BigInt!
    cardId:                       BigInt!
    from:                         String!
    amount:                       BigInt!
}

type BondlyTransferEvent @entity {
  id:                            ID!
  from:                          Bytes! # address
  to:                            Bytes! # address
  amount:                        BigInt!
  contractAddress:               Bytes! #address
  transactionHash:               Bytes!
  timestamp:                     BigInt!
}

type BondlyHolder @entity {
  id:                            ID!
  holderAddress:                 Bytes! # address
  amount:                        BigInt!
  contractAddress:               Bytes! #address
}


type LatestBlock @entity {
  id:                           ID!
  blockNumber:                  BigInt!
  hash:                         Bytes!
}

type BondlyHoldersBlock @entity {
  id:                           ID!
  blockNumber:                  BigInt!
  hash:                         Bytes!
  holders:                      [BondlyHolder]!
}
